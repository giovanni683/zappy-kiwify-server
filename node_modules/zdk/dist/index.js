var G=Object.create;var g=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var I=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),Z=(t,r)=>{for(var e in r)g(t,e,{get:r[e],enumerable:!0})},V=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of j(r))!z.call(t,s)&&s!==e&&g(t,s,{get:()=>r[s],enumerable:!(o=Y(r,s))||o.enumerable});return t};var $=(t,r,e)=>(e=t!=null?G(K(t)):{},V(r||!t||!t.__esModule?g(e,"default",{value:t,enumerable:!0}):e,t)),B=t=>V(g({},"__esModule",{value:!0}),t);var L=I((de,Q)=>{Q.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var R=I((fe,u)=>{var w=require("fs"),b=require("path"),H=require("os"),W=require("crypto"),J=L(),O=J.version,X=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function ee(t){let r={},e=t.toString();e=e.replace(/\r\n?/mg,`
`);let o;for(;(o=X.exec(e))!=null;){let s=o[1],n=o[2]||"";n=n.trim();let a=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),a==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),r[s]=n}return r}function re(t){let r=A(t),e=p.configDotenv({path:r});if(!e.parsed){let a=new Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw a.code="MISSING_DATA",a}let o=x(t).split(","),s=o.length,n;for(let a=0;a<s;a++)try{let i=o[a].trim(),c=se(e,i);n=p.decrypt(c.ciphertext,c.key);break}catch(i){if(a+1>=s)throw i}return p.parse(n)}function te(t){console.log(`[dotenv@${O}][INFO] ${t}`)}function oe(t){console.log(`[dotenv@${O}][WARN] ${t}`)}function y(t){console.log(`[dotenv@${O}][DEBUG] ${t}`)}function x(t){return t&&t.DOTENV_KEY&&t.DOTENV_KEY.length>0?t.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function se(t,r){let e;try{e=new URL(r)}catch(i){if(i.code==="ERR_INVALID_URL"){let c=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw c.code="INVALID_DOTENV_KEY",c}throw i}let o=e.password;if(!o){let i=new Error("INVALID_DOTENV_KEY: Missing key part");throw i.code="INVALID_DOTENV_KEY",i}let s=e.searchParams.get("environment");if(!s){let i=new Error("INVALID_DOTENV_KEY: Missing environment part");throw i.code="INVALID_DOTENV_KEY",i}let n=`DOTENV_VAULT_${s.toUpperCase()}`,a=t.parsed[n];if(!a){let i=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw i.code="NOT_FOUND_DOTENV_ENVIRONMENT",i}return{ciphertext:a,key:o}}function A(t){let r=null;if(t&&t.path&&t.path.length>0)if(Array.isArray(t.path))for(let e of t.path)w.existsSync(e)&&(r=e.endsWith(".vault")?e:`${e}.vault`);else r=t.path.endsWith(".vault")?t.path:`${t.path}.vault`;else r=b.resolve(process.cwd(),".env.vault");return w.existsSync(r)?r:null}function C(t){return t[0]==="~"?b.join(H.homedir(),t.slice(1)):t}function ne(t){te("Loading env from encrypted .env.vault");let r=p._parseVault(t),e=process.env;return t&&t.processEnv!=null&&(e=t.processEnv),p.populate(e,r,t),{parsed:r}}function ae(t){let r=b.resolve(process.cwd(),".env"),e="utf8",o=!!(t&&t.debug);t&&t.encoding?e=t.encoding:o&&y("No encoding is specified. UTF-8 is used by default");let s=[r];if(t&&t.path)if(!Array.isArray(t.path))s=[C(t.path)];else{s=[];for(let c of t.path)s.push(C(c))}let n,a={};for(let c of s)try{let l=p.parse(w.readFileSync(c,{encoding:e}));p.populate(a,l,t)}catch(l){o&&y(`Failed to load ${c} ${l.message}`),n=l}let i=process.env;return t&&t.processEnv!=null&&(i=t.processEnv),p.populate(i,a,t),n?{parsed:a,error:n}:{parsed:a}}function ie(t){if(x(t).length===0)return p.configDotenv(t);let r=A(t);return r?p._configVault(t):(oe(`You set DOTENV_KEY but you are missing a .env.vault file at ${r}. Did you forget to build it?`),p.configDotenv(t))}function ce(t,r){let e=Buffer.from(r.slice(-64),"hex"),o=Buffer.from(t,"base64"),s=o.subarray(0,12),n=o.subarray(-16);o=o.subarray(12,-16);try{let a=W.createDecipheriv("aes-256-gcm",e,s);return a.setAuthTag(n),`${a.update(o)}${a.final()}`}catch(a){let i=a instanceof RangeError,c=a.message==="Invalid key length",l=a.message==="Unsupported state or unable to authenticate data";if(i||c){let d=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw d.code="INVALID_DOTENV_KEY",d}else if(l){let d=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw d.code="DECRYPTION_FAILED",d}else throw a}}function pe(t,r,e={}){let o=!!(e&&e.debug),s=!!(e&&e.override);if(typeof r!="object"){let n=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw n.code="OBJECT_REQUIRED",n}for(let n of Object.keys(r))Object.prototype.hasOwnProperty.call(t,n)?(s===!0&&(t[n]=r[n]),o&&y(s===!0?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):t[n]=r[n]}var p={configDotenv:ae,_configVault:ne,_parseVault:re,config:ie,decrypt:ce,parse:ee,populate:pe};u.exports.configDotenv=p.configDotenv;u.exports._configVault=p._configVault;u.exports._parseVault=p._parseVault;u.exports.config=p.config;u.exports.decrypt=p.decrypt;u.exports.parse=p.parse;u.exports.populate=p.populate;u.exports=p});var q=I((ge,U)=>{var m={};process.env.DOTENV_CONFIG_ENCODING!=null&&(m.encoding=process.env.DOTENV_CONFIG_ENCODING);process.env.DOTENV_CONFIG_PATH!=null&&(m.path=process.env.DOTENV_CONFIG_PATH);process.env.DOTENV_CONFIG_DEBUG!=null&&(m.debug=process.env.DOTENV_CONFIG_DEBUG);process.env.DOTENV_CONFIG_OVERRIDE!=null&&(m.override=process.env.DOTENV_CONFIG_OVERRIDE);process.env.DOTENV_CONFIG_DOTENV_KEY!=null&&(m.DOTENV_KEY=process.env.DOTENV_CONFIG_DOTENV_KEY);U.exports=m});var S=I((Ie,M)=>{var ue=/^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;M.exports=function(r){return r.reduce(function(e,o){let s=o.match(ue);return s&&(e[s[1]]=s[2]),e},{})}});var le={};Z(le,{ZappyApi:()=>f,Zdk:()=>P});module.exports=B(le);(function(){R().config(Object.assign({},q(),S()(process.argv)))})();var E=$(require("axios")),f=class{_rootUrl;_token;constructor(r,e){this._rootUrl=r||process.env?.ZAPPY_URL,this._token=e||process.env?.ZAPPY_TOKEN}async makeRequest(r,e,o,s){if(!this._rootUrl||!this._token)throw new Error("Missing base url or API token");try{let a={url:this._rootUrl+e,method:r,headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._token}`,...s},data:o};return await(await(0,E.default)(a)).data}catch(n){throw n instanceof E.AxiosError&&"error"in n.response.data?new Error(n?.response?.data?.error):new Error("No request possible")}}};var h=class{constructor(r){this.api=r}async list(){try{return await this.api.makeRequest("GET","/api/connections")}catch(r){return console.error(r),{error:"Unable to list connections"}}}async get(r){try{let o=(await this.api.makeRequest("GET","/api/connections"))?.connections,s=o.find(n=>n.id===r);if(!s||s?.status!=="CONNECTED"){let n=o?.find(a=>a?.status==="CONNECTED");return n||{error:"Connection not found"}}return s}catch(e){return console.error(e),{error:"Unable to connection"}}}};var v=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20}=r||{},s=await this.api.makeRequest("GET",`/api/contacts?page=${e}&pageSize=${o}`);return s?.error?{error:s?.error}:s}catch(e){return console.error(e),{error:"Unable to list contacts"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/contacts/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"No contact details could be obtained"}}}async update(r,e){try{let o=await this.api.makeRequest("PUT",`/api/contacts/${r}`,e);return o?.error?{error:o?.error}:o}catch(o){return console.error(o),{error:"Unable to update contact"}}}};var F=$(require("form-data")),T=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20,ticketId:s="",contactId:n="",dateFrom:a="",dateTo:i=""}=r||{},c=await this.api.makeRequest("GET",`/api/messages?page=${e}&pageSize=${o}&ticketId=${s}&contactId=${n}&dateFrom=${a}&dateToo=${i}`);return c?.error?{error:c?.error}:c}catch(e){return console.error(e),{error:"Unable to list message"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/messages/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"Unable to message"}}}async send(r,e,o){try{if(!o||o==="text"){let s=await this.api.makeRequest("POST",`/api/send/${r}`,e);return s?.error?{error:s?.error}:s}else{let{caption:s,connectionFrom:n,media:a}=e,i=new F.default;i.append("media",a),i.append("caption",s||""),i.append("connectionFrom",n);let c=await this.api.makeRequest("POST",`/api/send/${o}/${r}`,i,{...i.getHeaders()});return c?.error?{error:c?.error}:c}}catch(s){return console.error(s),{error:"Cannot send message"}}}};var _=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20}=r||{},s=await this.api.makeRequest("GET",`/api/queues?page=${e}&pageSize=${o}`);return s?.error?{error:s?.error}:s}catch(e){return console.error(e),{error:"Unable to list queues"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/queues/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"Unable to queue"}}}};var k=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20}=r||{},s=await this.api.makeRequest("GET",`/api/tags?page=${e}&pageSize=${o}`);return s?.error?{error:s?.error}:s}catch(e){return console.error(e),{error:"Unable to list tags"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/tags/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"Unable to tag"}}}};var N=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20}=r||{},s=await this.api.makeRequest("GET",`/api/tickets?page=${e}&pageSize=${o}`);return s?.error?{error:s?.error}:s}catch(e){return console.error(e),{error:"Unable to list tickets"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/tickets/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"Unable to ticket"}}}async transfer(r,e){try{let o=await this.api.makeRequest("POST",`/api/tickets/${r}/transfer`,e);return o?.error?{error:o?.error}:o}catch(o){return console.error(o),{error:"Cannot transfer ticket"}}}async resolve(r,e){try{let o=await this.api.makeRequest("POST",`/api/tickets/${r}/resolve`,e);return o?.error?{error:o?.error}:o}catch(o){return console.error(o),{error:"Cannot resolve ticket"}}}async update(r,e){try{let o=await this.api.makeRequest("PUT",`/api/tickets/${r}`,e);return o?.error?{error:o?.error}:o}catch(o){return console.error(o),{error:"Cannot update ticket"}}}};var D=class{constructor(r){this.api=r}async list(r){try{let{page:e=1,pageSize:o=20}=r||{},s=await this.api.makeRequest("GET",`/api/users?page=${e}&pageSize=${o}`);return s?.error?{error:s?.error}:s}catch(e){return console.error(e),{error:"Unable to list users"}}}async get(r){try{let e=await this.api.makeRequest("GET",`/api/users/${r}`);return e?.error?{error:e?.error}:e}catch(e){return console.error(e),{error:"Unable to user"}}}};var P=class extends f{tickets=new N(this);connections=new h(this);contacts=new v(this);messages=new T(this);queues=new _(this);tags=new k(this);users=new D(this)};0&&(module.exports={ZappyApi,Zdk});
//# sourceMappingURL=index.js.map